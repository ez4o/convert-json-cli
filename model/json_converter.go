package model

import (
	"encoding/json"
)

type JSONConverter struct {
	Writer IWriter
}

func (jc *JSONConverter) GetAbstractStructs(jsonString string) ([]Struct, error) {
	if jsonString[0] == '[' {
		var result []interface{}

		err := json.Unmarshal([]byte(jsonString), &result)
		if err != nil {
			return nil, err
		}

		b, err := json.Marshal(result[0])
		if err != nil {
			return nil, err
		}

		abstractStructs, err := Parse("Nested", string(b))
		if err != nil {
			return nil, err
		}

		abstractStructs = append(abstractStructs, Struct{Name: "AutoGenerated", Fields: []Field{{Index: "", TypeName: "Nested[]"}}})

		return abstractStructs, nil
	} else {
		abstractStructs, err := Parse("AutoGenerated", jsonString)
		if err != nil {
			return nil, err
		}

		return abstractStructs, nil
	}
}
